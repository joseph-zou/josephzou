/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResumeRouteImport } from './routes/resume'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as ChangelogRouteImport } from './routes/changelog'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as ProjectsPersonalSiteRouteImport } from './routes/projects/personal-site'
import { Route as ProjectsPasswinRouteImport } from './routes/projects/passwin'
import { Route as ProjectsMiniCollectionsRouteImport } from './routes/projects/mini-collections'
import { Route as ProjectsM2mRouteImport } from './routes/projects/m2m'
import { Route as ProjectsLeethubRouteImport } from './routes/projects/leethub'
import { Route as ProjectsJcurveRouteImport } from './routes/projects/jcurve'
import { Route as ProjectsDeskmateRouteImport } from './routes/projects/deskmate'
import { Route as ProjectsAlfredRouteImport } from './routes/projects/alfred'

const ResumeRoute = ResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const ChangelogRoute = ChangelogRouteImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsPersonalSiteRoute = ProjectsPersonalSiteRouteImport.update({
  id: '/projects/personal-site',
  path: '/projects/personal-site',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsPasswinRoute = ProjectsPasswinRouteImport.update({
  id: '/projects/passwin',
  path: '/projects/passwin',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsMiniCollectionsRoute = ProjectsMiniCollectionsRouteImport.update({
  id: '/projects/mini-collections',
  path: '/projects/mini-collections',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsM2mRoute = ProjectsM2mRouteImport.update({
  id: '/projects/m2m',
  path: '/projects/m2m',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsLeethubRoute = ProjectsLeethubRouteImport.update({
  id: '/projects/leethub',
  path: '/projects/leethub',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsJcurveRoute = ProjectsJcurveRouteImport.update({
  id: '/projects/jcurve',
  path: '/projects/jcurve',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsDeskmateRoute = ProjectsDeskmateRouteImport.update({
  id: '/projects/deskmate',
  path: '/projects/deskmate',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsAlfredRoute = ProjectsAlfredRouteImport.update({
  id: '/projects/alfred',
  path: '/projects/alfred',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/changelog': typeof ChangelogRoute
  '/gallery': typeof GalleryRoute
  '/resume': typeof ResumeRoute
  '/projects/alfred': typeof ProjectsAlfredRoute
  '/projects/deskmate': typeof ProjectsDeskmateRoute
  '/projects/jcurve': typeof ProjectsJcurveRoute
  '/projects/leethub': typeof ProjectsLeethubRoute
  '/projects/m2m': typeof ProjectsM2mRoute
  '/projects/mini-collections': typeof ProjectsMiniCollectionsRoute
  '/projects/passwin': typeof ProjectsPasswinRoute
  '/projects/personal-site': typeof ProjectsPersonalSiteRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/changelog': typeof ChangelogRoute
  '/gallery': typeof GalleryRoute
  '/resume': typeof ResumeRoute
  '/projects/alfred': typeof ProjectsAlfredRoute
  '/projects/deskmate': typeof ProjectsDeskmateRoute
  '/projects/jcurve': typeof ProjectsJcurveRoute
  '/projects/leethub': typeof ProjectsLeethubRoute
  '/projects/m2m': typeof ProjectsM2mRoute
  '/projects/mini-collections': typeof ProjectsMiniCollectionsRoute
  '/projects/passwin': typeof ProjectsPasswinRoute
  '/projects/personal-site': typeof ProjectsPersonalSiteRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/changelog': typeof ChangelogRoute
  '/gallery': typeof GalleryRoute
  '/resume': typeof ResumeRoute
  '/projects/alfred': typeof ProjectsAlfredRoute
  '/projects/deskmate': typeof ProjectsDeskmateRoute
  '/projects/jcurve': typeof ProjectsJcurveRoute
  '/projects/leethub': typeof ProjectsLeethubRoute
  '/projects/m2m': typeof ProjectsM2mRoute
  '/projects/mini-collections': typeof ProjectsMiniCollectionsRoute
  '/projects/passwin': typeof ProjectsPasswinRoute
  '/projects/personal-site': typeof ProjectsPersonalSiteRoute
  '/projects/': typeof ProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/changelog'
    | '/gallery'
    | '/resume'
    | '/projects/alfred'
    | '/projects/deskmate'
    | '/projects/jcurve'
    | '/projects/leethub'
    | '/projects/m2m'
    | '/projects/mini-collections'
    | '/projects/passwin'
    | '/projects/personal-site'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/changelog'
    | '/gallery'
    | '/resume'
    | '/projects/alfred'
    | '/projects/deskmate'
    | '/projects/jcurve'
    | '/projects/leethub'
    | '/projects/m2m'
    | '/projects/mini-collections'
    | '/projects/passwin'
    | '/projects/personal-site'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/changelog'
    | '/gallery'
    | '/resume'
    | '/projects/alfred'
    | '/projects/deskmate'
    | '/projects/jcurve'
    | '/projects/leethub'
    | '/projects/m2m'
    | '/projects/mini-collections'
    | '/projects/passwin'
    | '/projects/personal-site'
    | '/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChangelogRoute: typeof ChangelogRoute
  GalleryRoute: typeof GalleryRoute
  ResumeRoute: typeof ResumeRoute
  ProjectsAlfredRoute: typeof ProjectsAlfredRoute
  ProjectsDeskmateRoute: typeof ProjectsDeskmateRoute
  ProjectsJcurveRoute: typeof ProjectsJcurveRoute
  ProjectsLeethubRoute: typeof ProjectsLeethubRoute
  ProjectsM2mRoute: typeof ProjectsM2mRoute
  ProjectsMiniCollectionsRoute: typeof ProjectsMiniCollectionsRoute
  ProjectsPasswinRoute: typeof ProjectsPasswinRoute
  ProjectsPersonalSiteRoute: typeof ProjectsPersonalSiteRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/resume': {
      id: '/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof ResumeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/changelog': {
      id: '/changelog'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof ChangelogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/personal-site': {
      id: '/projects/personal-site'
      path: '/projects/personal-site'
      fullPath: '/projects/personal-site'
      preLoaderRoute: typeof ProjectsPersonalSiteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/passwin': {
      id: '/projects/passwin'
      path: '/projects/passwin'
      fullPath: '/projects/passwin'
      preLoaderRoute: typeof ProjectsPasswinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/mini-collections': {
      id: '/projects/mini-collections'
      path: '/projects/mini-collections'
      fullPath: '/projects/mini-collections'
      preLoaderRoute: typeof ProjectsMiniCollectionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/m2m': {
      id: '/projects/m2m'
      path: '/projects/m2m'
      fullPath: '/projects/m2m'
      preLoaderRoute: typeof ProjectsM2mRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/leethub': {
      id: '/projects/leethub'
      path: '/projects/leethub'
      fullPath: '/projects/leethub'
      preLoaderRoute: typeof ProjectsLeethubRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/jcurve': {
      id: '/projects/jcurve'
      path: '/projects/jcurve'
      fullPath: '/projects/jcurve'
      preLoaderRoute: typeof ProjectsJcurveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/deskmate': {
      id: '/projects/deskmate'
      path: '/projects/deskmate'
      fullPath: '/projects/deskmate'
      preLoaderRoute: typeof ProjectsDeskmateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/alfred': {
      id: '/projects/alfred'
      path: '/projects/alfred'
      fullPath: '/projects/alfred'
      preLoaderRoute: typeof ProjectsAlfredRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChangelogRoute: ChangelogRoute,
  GalleryRoute: GalleryRoute,
  ResumeRoute: ResumeRoute,
  ProjectsAlfredRoute: ProjectsAlfredRoute,
  ProjectsDeskmateRoute: ProjectsDeskmateRoute,
  ProjectsJcurveRoute: ProjectsJcurveRoute,
  ProjectsLeethubRoute: ProjectsLeethubRoute,
  ProjectsM2mRoute: ProjectsM2mRoute,
  ProjectsMiniCollectionsRoute: ProjectsMiniCollectionsRoute,
  ProjectsPasswinRoute: ProjectsPasswinRoute,
  ProjectsPersonalSiteRoute: ProjectsPersonalSiteRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
